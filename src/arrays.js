// Specify position and color of the vertices
var islandVertices = new Float32Array([
                  // Front
                  -0.5, -0.5, 0.5,
                  0.5, -0.5, 0.5,
                  0.5, 0.5, 0.5,

                  0.5, 0.5, 0.5,
                  -0.5, 0.5 ,0.5,
                  -0.5, -0.5, 0.5,

                  // Right
                  0.5, 0.5, 0.5,
                  0.5, -0.5, 0.5,
                  0.5, -0.5, -0.5,

                  0.5, -0.5, -0.5,
                  0.5, 0.5, -0.5,
                  0.5, 0.5, 0.5,

                  // Back
                  -0.5, -0.5, -0.5,
                  0.5, -0.5, -0.5,
                  0.5, 0.5, -0.5,

                  0.5, 0.5, -0.5,
                  -0.5, 0.5 ,-0.5,
                  -0.5, -0.5, -0.5,

                  // Left
                  -0.5, 0.5, 0.5,
                  -0.5, -0.5, 0.5,
                  -0.5, -0.5, -0.5,

                  -0.5, -0.5, -0.5,
                  -0.5, 0.5, -0.5,
                  -0.5, 0.5, 0.5,

                  // Bottom
                  -0.5, -0.5, 0.5,
                  0.5, -0.5, 0.5,
                  0.5, -0.5, -0.5,

                  0.5, -0.5, -0.5,
                  -0.5, -0.5 , -0.5,
                  -0.5, -0.5, 0.5,

                  // Top
                  -0.5, 0.5, 0.5,
                  0.5, 0.5, 0.5,
                  0.5, 0.5, -0.5,

                  0.5, 0.5, -0.5,
                  -0.5, 0.5 , -0.5,
                  -0.5, 0.5, 0.5
                  ]);

var islandNormals = new Float32Array([
                  // Front
                  0.0,  0.0,  1.0,
                  0.0,  0.0,  1.0,
                  0.0,  0.0,  1.0,
                  0.0,  0.0,  1.0,
                  0.0,  0.0,  1.0,
                  0.0,  0.0,  1.0,

                  // Right
                  1.0,  0.0,  0.0,
                  1.0,  0.0,  0.0,
                  1.0,  0.0,  0.0,
                  1.0,  0.0,  0.0,
                  1.0,  0.0,  0.0,
                  1.0,  0.0,  0.0,

                  // Back
                  0.0,  0.0,  -1.0,
                  0.0,  0.0,  -1.0,
                  0.0,  0.0,  -1.0,
                  0.0,  0.0,  -1.0,
                  0.0,  0.0,  -1.0,
                  0.0,  0.0,  -1.0,

                  // Left
                  -1.0,  0.0,  0.0,
                  -1.0,  0.0,  0.0,
                  -1.0,  0.0,  0.0,
                  -1.0,  0.0,  0.0,
                  -1.0,  0.0,  0.0,
                  -1.0,  0.0,  0.0,

                  // Bottom
                  0.0, -1.0,  0.0,
                  0.0, -1.0,  0.0,
                  0.0, -1.0,  0.0,
                  0.0, -1.0,  0.0,
                  0.0, -1.0,  0.0,
                  0.0, -1.0,  0.0,

                  // Top
                  0.0,  1.0,  0.0,
                  0.0,  1.0,  0.0,
                  0.0,  1.0,  0.0,
                  0.0,  1.0,  0.0,
                  0.0,  1.0,  0.0,
                  0.0,  1.0,  0.0,
]);

var waterVertices = new Float32Array([1, 0, 1,
                    1, 0, -1,
                    -1, 0, -1,

                    -1, 0, -1,
                    -1, 0, 1,
                    1, 0, 1
                   ]);
	
var tesselation = [];
fillTess();	
var waterVerticesTessel = new Float32Array(tesselation);


var palmTreeVertices = new Float32Array([
                  // Front
                  -0.5, -0.5, 0.5,
                  0.5, -0.5, 0.5,
                  1, 0.5, 1,

                  1, 0.5, 1,
                  -1, 0.5 ,1,
                  -0.5, -0.5, 0.5,

                  // Right
                  1, 0.5, 1,
                  0.5, -0.5, 0.5,
                  0.5, -0.5, -0.5,

                  0.5, -0.5, -0.5,
                  1, 0.5, -1,
                  1, 0.5, 1,

                  // Back
                  -0.5, -0.5, -0.5,
                  0.5, -0.5, -0.5,
                  1, 0.5, -1,

                  1, 0.5, -1,
                  -1, 0.5 ,-1,
                  -0.5, -0.5, -0.5,

                  // Left
                  -1, 0.5, 1,
                  -0.5, -0.5, 0.5,
                  -0.5, -0.5, -0.5,

                  -0.5, -0.5, -0.5,
                  -1, 0.5, -1,
                  -1, 0.5, 1,

                  // Bottom
                  -0.5, -0.5, 0.5,
                  0.5, -0.5, 0.5,
                  0.5, -0.5, -0.5,

                  0.5, -0.5, -0.5,
                  -0.5, -0.5 , -0.5,
                  -0.5, -0.5, 0.5,

                  // Top
                  -1, 0.5, 1,
                  1, 0.5, 1,
                  1, 0.5, -1,

                  1, 0.5, -1,
                  -1, 0.5 , -1,
                  -1, 0.5, 1
                  ]);

var palmLeafVertices = new Float32Array([0, 0, -0.2,
                    0, 0, 0.2,
                    1, -0.3, 0,
                   ]);



                   var cubePositions = new Float32Array([  -0.5, -0.5,  0.5,
                 								     0.5, -0.5,  0.5,
                 								     0.5,  0.5,  0.5,

                 									 0.5,  0.5,  0.5,
                 									-0.5,  0.5,  0.5,
                 									-0.5, -0.5,  0.5,

                 									 // Right
                 									 0.5,  0.5,  0.5,
                 									 0.5, -0.5,  0.5,
                 									 0.5, -0.5, -0.5,

                 									 0.5, -0.5, -0.5,
                 									 0.5,  0.5, -0.5,
                 									 0.5,  0.5,  0.5,

                 									 // Back
                 									-0.5, -0.5, -0.5,
                 									 0.5, -0.5, -0.5,
                 									 0.5,  0.5, -0.5,

                 									 0.5,  0.5, -0.5,
                 									-0.5,  0.5, -0.5,
                 									-0.5, -0.5, -0.5,

                 									 // Left
                 									-0.5,  0.5,  0.5,
                 									-0.5, -0.5,  0.5,
                 									-0.5, -0.5, -0.5,

                 									-0.5, -0.5, -0.5,
                 									-0.5,  0.5, -0.5,
                 									-0.5,  0.5,  0.5,

                 									 // Bottom
                 									-0.5, -0.5,  0.5,
                 									 0.5, -0.5,  0.5,
                 									 0.5, -0.5, -0.5,

                 									 0.5, -0.5, -0.5,
                 									-0.5, -0.5, -0.5,
                 									-0.5, -0.5,  0.5,

                 									 // Top
                 									-0.5,  0.5,  0.5,
                 									 0.5,  0.5,  0.5,
                 									 0.5,  0.5, -0.5,

                 									 0.5,  0.5, -0.5,
                 									-0.5,  0.5, -0.5,
                 									-0.5,  0.5,  0.5
                 								]);

                 									// Front
                 	var cubeColors = new Float32Array([     0, 0, 1, 1,
                 									0, 0, 1, 1,
                 									0, 0, 1, 1,
                 									0, 0, 1, 1,
                 									0, 0, 1, 1,
                 									0, 0, 1, 1,

                 									// Right
                 									0, 1, 0, 1,
                 									0, 1, 0, 1,
                 									0, 1, 0, 1,
                 									0, 1, 0, 1,
                 									0, 1, 0, 1,
                 									0, 1, 0, 1,

                 									// Back
                 									1, 0, 0, 1,
                 									1, 0, 0, 1,
                 									1, 0, 0, 1,
                 									1, 0, 0, 1,
                 									1, 0, 0, 1,
                 									1, 0, 0, 1,

                 									// Left
                 									1, 1, 0, 1,
                 									1, 1, 0, 1,
                 									1, 1, 0, 1,
                 									1, 1, 0, 1,
                 									1, 1, 0, 1,
                 									1, 1, 0, 1,

                 									// Bottom
                 									1, 0, 1, 1,
                 									1, 0, 1, 1,
                 									1, 0, 1, 1,
                 									1, 0, 1, 1,
                 									1, 0, 1, 1,
                 									1, 0, 1, 1,

                 									// Top
                 									0, 1, 1, 1,
                 									0, 1, 1, 1,
                 									0, 1, 1, 1,
                 									0, 1, 1, 1,
                 									0, 1, 1, 1,
                 									0, 1, 1, 1
                 								]);

					var cubeTexArray = new Float32Array([
                   0,  0,
                   1,  0,
                   0,  1,

                   1,  1,
                   1,  0,
                   0,  1,

									 // Right
                   0,  0,
                   1,  0,
                   0,  1,

                   1,  1,
                   1,  0,
                   0,  1,

									 // Back
                   0,  0,
                   1,  0,
                   0,  1,

                   1,  1,
                   1,  0,
                   0,  1,

									 // Left
                   0,  0,
                   1,  0,
                   0,  1,

                   1,  1,
                   1,  0,
                   0,  1,

									 // Bottom
                   0,  0,
                   1,  0,
                   0,  1,

                   1,  1,
                   1,  0,
                   0,  1,

									 // Top
                   0,  0,
                   1,  0,
                   0,  1,

                   1,  1,
                   1,  0,
                   0,  1,
								]);
								

//der ber√ºchtigte Sander-Algorithmus								
function fillTess()
{
	for(i = 0; i < 200; i++)
	{
		for(t = 0; t < 200; t++)
		{
			tesselation.push(scaleTess(i), 0, scaleTess(t));
			tesselation.push(scaleTess(i+1), 0, scaleTess(t));
			tesselation.push(scaleTess(i), 0, scaleTess(t+1));
			
			tesselation.push(scaleTess(i+1), 0, scaleTess(t));
			tesselation.push(scaleTess(i), 0, scaleTess(t+1));
			tesselation.push(scaleTess(i+1), 0, scaleTess(t+1));
		}
	}
}

function scaleTess(value)
{
	return value/200 - 0.5;
}
		
